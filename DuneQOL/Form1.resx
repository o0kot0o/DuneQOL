<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAB4eHcWc3NzVXFxcVeIiIcjeXp6F3V1dmhyc3Q+ho2XHn2Ag2F2dnZeXGBiWT1JWm1OVmGpK1GFygA+
        kuRCWXrwL1KD8QBAk+coS3TOKEJfrjpJWIEYISs9b25vTCMyRgh1dXZHZmdnRHV2dzg4OToOhISEeoeH
        h5FjY2MgdHR0AIeTnAyoqamTsLCwr3yasSiMlJphrK+w1IOMlbRAbZJoh5WfspCbqukdV6nmN2299Zak
        uf9CeMb/QHXD/4mcuv9bfbH/QHW//2qLtf97kq3/UoCy+RNWm+RleIrHDiI2U5KUl5akpKW8qaqsYY+R
        kzukpKSIpaWlnKSkpEfHx8cAG1R/CJqruFyJpbuaSISyZY6jtJiYsMGgiJys5Dx1q+Y7crXxZIzB/zxy
        vf97kbD/payy/3KHm/9oeo//lJqo/4mPl/98ho7/k5ym/5Wir/94jqf/SXu0/1WDsv8RUo/xXnuV5oWP
        mrWNlZ9SfoydJ62trYefnp6EmJiXGpubmgA/U2EUJ01odS9df65FdJllbZ7FUT1khnonXqTfJHDR/zJ0
        xP9IdqP/U3mb/158lv9ji7f/YpTL/05+vv9Ndrb/YHqq/2iayv9WjcD/Uoa7/1eBrP9Xdpb/T3ik/zRq
        o/8aZKv+EE2E5Bc8YnMGFCYVP01YQURUX04aLDcVIjdFAEJdbCI0WnWbN2B+uTZadbkxWn+WHluo5yx4
        1f9Ki8n/T4i8/0h+sP9Of6b/U4Ww/1KCrv94tun/aqzm/0yBxf9Lbav/VoTC/z1tm/9KiMH/TYa+/z9s
        lP9GdKf/SmqM/0Bok/8haa7/EliV7h4/V7QpTWaVKVFsjiNKYzrJ//8AQ1xxHC5ZflQ3b55nO2WFqipi
        nPozf9L/T5bW/1ii3/9apeP/ZKLN/3zA4v+T2vv/ZJjC/3y64v+Cy/X/crTl/0Zvsf8+YK//PmqW/2Gf
        y/9uoMz/TXea/0Fqqv9Idar/SGyV/0Bnkv8tZ5//Mll680FTZ65QX3OBNUNZTh0oPiwzSl0uJ0FVdSlJ
        ZI8uWX3jLWOj/zxwqf9Agsr/VKnz/3LO/v9zvd//kd7u/6z3/v9zr9T/idPt/5Dg/f+Dxe7/S3e6/01x
        uf9giqv/Vn6d/1Z2mP9ehar/Y363/09zuP8+cbj/R3u2/0x9rv88bZT/JFF08C1FW4ovRV0qLDtfCEJc
        bS1AX3N+J1WJ2ylnt/9HaZD/PWqd/zB0w/9Jmuj/dMT7/4HQ9v+S6vv/uf7//7Ls9v+j6vv/p+r9/6HY
        9v9Xhsj/XoK//42x0/9tk7j/X4Wy/26c0v9wnND/U2Kl/01nsP9ikcj/XYm2/2F6kf8zd67/IWWU4ShL
        YTotUmkA////BR42VUUIUsPrU3av/2V4kP9cibz/TIfJ/1ub3/+IwPf/oeP//6H6//+x/v//w/7//7fq
        /P+62fb/n9Dz/1mCw/9lg73/j7PX/3uo1/9/rdr/erHf/3Gv4f9ccqj/Ymui/22Zw/9Xj8L/YXiS/1Z9
        o/8LdcT1BjlYWwDp/wCYe0sMBkGVmSlt0v90fpH/Rm6v/1iRzP9cltT/X5fV/3KU1P+VyPX/k+b//5fr
        //+j6P//tN38/7fX+P9vjdD/Slqa/32Wv/+Yvdr/g7DZ/4Ku2v+CteT/e7Tm/2yczv9Xa6b/cpLA/2ua
        0/9ig7b/dXyF/zGEyP8AY6KwBwAADSE2Ty8IT7LbVXel/19tkv9HecT/YKbe/2Ot6P9srun/aYrN/3Sl
        4P9+zf3/dMD5/3S69P+g1vr/mcPz/1Jqvv9FT4r/jqO9/5O51/+RtdX/irPZ/4Kw3f96qd7/dqvf/1Bj
        n/9fbZ7/frXd/3mw4P9wiZ3/VnCO/yFpp+oiQFtACD+KZBdjyvhqe4//SWqh/1uBwP+Cvun/dbnv/2qW
        5v+HtOz/gafS/3iy4/92suz/fLjr/57X9/99oN//WWmx/1xhjv+WsMz/irLQ/4KnzP+Ww+D/jL/j/4O5
        4v90pdb/TFiT/0dJff90n8v/b6LM/2J8nf9rb4L/K4LH/QJjm38ATbWcM3bM/299jf9NbKz/TF+t/4Cz
        3P9/sNv/Y37S/4m15/+Ptdf/bIS4/3+p2/+d0Pb/msXq/2iCyv9RZ7H/Q02F/3+fy/+cssr/X3Gv/4as
        0P+dzeb/ksTi/2qJtP9FS4H/QUR9/1JdlP9uirf/gKzQ/32KlP89icD/AHvBuABbzsVKfLn/aHWI/1Fj
        n/9JXKj/Yny+/3uez/9igsz/fajf/5fC4/9me63/Ynaw/5K13P+Or9j/T2Sy/1JkpP9EUIX/f5rH/7q/
        0/9rd67/ZXi0/4Wiy/+Zv9j/V2ic/0RMhv9VYJL/ZHqp/4274P+NveP/g5ip/1OIrP8CjNfcA2bc21l+
        q/9yjJ3/UWKZ/0dPkf9KTaH/Y3W8/1Zpuv9wkNX/oNDw/4Wozf9SYp7/XXS0/2+Px/9FVqD/VGig/01b
        lP93kc3/udHp/4ugw/9NZ63/R1al/2R5rv9WaZ7/SVOK/1BdlP9vksH/qt7x/8Dp+P+WtcH/YYeh/wiY
        4u0Fb+fgWn6k/3qgsv9ljbf/QkV//0BCiv9KT6X/TVmn/2V+x/+izOv/k7HM/19voP9KWZb/XXOs/zpI
        hf9TZZT/Tl6U/2+DtP+3zN3/r8XY/2OGtv9EXqH/QUyR/1RrrP9SZ6f/UVeQ/4qz1/+16Pf/yOz6/6K5
        xP9oiJz/C6Hm8wV069s9X4n/Wm2N/26myf9FToL/PTx8/0VEm/9IT5f/WnC5/6TG5/+TtNv/Z3+x/19y
        pv9dcKH/Q06A/0pZif9YZpT/c32c/7S+z//D3Oz/o8DW/3+dvv9shKr/V22q/05irP9iZZr/n8ji/83z
        +v/D6/j/o7zL/2qLnv8LpufyAnPozC1Uhv9QVH3/dKzM/0tijP87OnH/REKK/1RZof9fc7j/nbbf/4yt
        3f90jrr/YHKj/2Z4oP9VaJ7/Pkx//0xYgP+Ll7P/jJ3E/7vV6P/B2eb/wtjh/63Q2v99n7r/YGmc/3B/
        qP+pydz/5Pn8/9r6/v+twcj/ZI2h/wir6eYAdeqtKGGb/0dHcf9df6X/TW2W/0NFev9JS4b/Vliv/2+F
        zv+Bndj/faLa/3GIr/9eaZH/aHug/1lqjv89QWP/UGGP/5Swzf93hKf/rMbc/73V4v/E197/zd/j/5zD
        0f+KiqD/boKc/4Gwyf/e9ff/4Pr4/6i4uv9Wkav/A7HrywBz534icLn+TUtj/0ZIcf9ATXT/REZ+/0lP
        jf9KR6z/YGjJ/2R/xf9+qeb/qcvj/3aIrf9ca5P/X2Fu/1hac/9wjrn/mKvH/3eIr/+atMz/utLe/8TU
        1v/a497/lsHP/3B0h/+Ab3P/pbfM/+L17f/W5Nv/mJya/0Kcvv8AteeeAGrTRBh92e9UW2r/SUNm/zU3
        af9KR5P/V12c/z8/iv9bYb//c47T/57F6/+x2Ov/i7Lc/15yqv9gZG7/foKY/3ODov9mcY3/l6jJ/5+4
        z/+81N//w9PT/9bf1f+81M7/UnSO/1Jcdv+dprr/4erY/7/Jv/+CiYz/Ja3V+ACx2GAAUZ0UB37nxE56
        n/9MTmP/Oztq/zk5cf9ZYJn/QEKG/2pyzv+atPD/nLrT/3eNrf9Wca//SF+k/1ZYb/+AeIb/W1lt/zM8
        Xf9lcJT/rLzR/7fU5P/I1tT/z9nM/9fbyf+Hpaz/Q0ho/2lylP/Jz8D/qqyh/2WQnf8LuuTYAJaxJADf
        /wAAc9d2I37M/0JJWv81NF7/MzZn/01Sif9CR4f/aXbM/6C89P+z0uP/j6W7/2R6m/9YYIX/ZmJ0/1hX
        ZP9LSmH/NT9g/29xhv+tvtP/ud3x/8/c2P/R2cn/09bA/73Etf9uc4L/kKem/8XKtf+Njor/OKrH/wC2
        2pAYAAACBV2qAAVapSQFdNTXI0Nr/zMwWv82N2f/R0l9/0tOi/9leML/ka3q/8rs+v+gvtD/XGR4/2dj
        dP9JVG3/QU1o/0xUd/9ETW//eoWl/6vD5P/B5ff/2OXe/9Taxv/P077/ysu4/8HGs//P073/oqCU/2ST
        n/8Ov+HmAZOsNgOlwQAWJzoAAP//AANowG8MYq36Lzhh/zg4Yv9HR3P/Ymql/4GZ0/+iwOX/xOPv/7LU
        5f9/kqn/TFBo/0tghf9LW3r/Sk1o/0JMbP92ha//pr/h/83q9v/g6N7/1da+/87Ntf/LyrT/xsat/6uq
        m/96io3/JrrV/wKvyYcVAAADC0RPAAAAAAALRXgADj9sEQNnt64vX43/SEpy/0pHcP94ibX/iZm4/6G3
        z/+nwNT/ss3Y/3KVt/9DVXz/O0dr/zM+X/8+SWr/W2iM/5StzP+83/D/1Obm/+Hm1//b2sH/y8qv/8bG
        qv+ko5H/gIeG/zmyx/8FudLDCGVxHAd3hgAAAAAAAAAAAGMBAAAAOGEAAClKL0hmgNtodZr/iJOm/3+I
        jf92eX3/fYuZ/42kv/+auM3/j6zD/1txmP9DUXj/R09z/1llif+ClrX/qdbx/7Pb7f/O2dL/3ODM/9/f
        w//BwaT/nZqK/36Hh/87scT/CL3U2wh2hToEw9kAFQMEAAAAAAAAAAAAAAAAAAoBAAAAAAADSlFbXWqF
        otdoqdD/dIqW/3h1dP9nZWn/dnF6/3iNpv+Pssr/bY6r/zlFaP9CRW7/W2qL/5O0zv+dzOj/ssrW/8fP
        w//S073/v72o/5aSiP90jJD/M7nM/we7z90JcX9JAP//ABMMEQAAAAAAAAAAAAAAAAAAAAAAAAAAABUa
        FwA0AAAAIVFtLAd7v7Abldr7VpKy/3uChv94cG7/dXh8/4Kdr/9yiJj/SlyA/1hplP9ggKH/hK7M/5i7
        z/+isLX/o6Wc/5iVjP+Dior/WaKs/xzF2f4EsMPGCGJvPv8AAAASBwkAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAC8AAAAET3cADS9FEgJrpHMGj9baJZvV/lSVsv9ziZL/foSG/21wdP9PXn7/VmqV/3uX
        s/9/iZP/h4uO/4OIiv92j5P/VaSw/yfB1P8IwtflApSmighBTR4A1fEAEQAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARDQ8AHgAAAQVMbiQAerF4BJXTxxSi2vEqpdD+NJe3/zFt
        i/9Ziav/Y7TQ/0qjtP87rsH/KLrQ/xTD2fUEvtTRAKG0iQRkczMOAAAEChcfAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgIDACUAAAAFPFIVAG2WSACI
        toUAmsi0A5rC0BKozNsHttfbALLR0wCsxboAnrONAYKUUwZMWB4aAAACEggNAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAEAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAABwAAAAcAA
        AAPgAAAH4AAAD/gAAB/8AAA//gAAf//AAf8=
</value>
  </data>
</root>